{"version":3,"sources":["NumberConverter.js","utils.js","IPV4Component.js","SubnetResult.js","IPV4SolverComponent.js","App.js","reportWebVitals.js","index.js"],"names":["NumberConverter","useState","number","setNumber","baseGiven","setBaseGiven","baseWanted","setBaseWanted","calcSteps","setCalcSteps","btnDisabled","getDigits","base","Array","keys","map","x","toString","parseInt","validateNumber","digits","every","item","includes","calculate","dezimalNumber","preSteps","n","b","steps","oldN","r","Math","floor","convertedR","push","reverse","convertedNumber","join","dynHeight","reduce","a","v","Row","className","Col","md","FloatingLabel","controlId","label","Form","Select","value","onChange","event","target","FormControl","placeholder","disabled","style","textAlign","Button","onClick","deziNumber","forEach","digit","i","convertedDigit","deziDigits","pow","Control","as","height","dezimalToBinary","binaryToDezimal","binary","dezi","addLeadingZeroes","binarySize","size","length","unshift","booleanANDBinary","foo","sort","j","maxBinary","valueB","exponent","filter","getNetworkIDs","addr","subnetMask","subnetOctets","networkIncrement","flat","split","baseNetwork","octet","firstSubnet","broadcast","mixedOctetIndex","findIndex","y","bla","subnets","bar","slice","networkID","match","rangeStart","rangeEnd","networkRange","bits","some","IPV4Component","props","setDeziHandler","index","setDezi","mehStuff","isValidNumber","addLeadingZeroesHandler","setOctetHandler","setOctet","elem1","elem2","elem3","elem4","restricted","border","style1","style2","style3","style4","title","InputGroup","Text","type","onBlur","SubnetResultComponent","tableData","subnet","Table","striped","bordered","hover","IPV4SolverComponent","elemA","elemB","addrOctets","octets","subOctet1","subOctet2","subOctet3","subOctet4","bcDezis","subOctets","SubnetResult","App","octet1","setOctet1","octet2","setOctet2","octet3","setOctet3","octet4","setOctet4","dezi1","setDezi1","dezi2","setDezi2","dezi3","setDezi3","dezi4","setDezi4","setSubOctet1","setSubOctet2","setSubOctet3","setSubOctet4","subDezi1","setSubDezi1","subDezi2","setSubDezi2","subDezi3","setSubDezi3","subDezi4","addrCount","subnetBits","sum","subnetCount","Container","Accordion","defaultActiveKey","Item","eventKey","Header","Body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5eaa6f65.chunk.js","sourcesContent":["import React, { useState } from \"react\"\r\nimport { FormControl, Form, Button, FloatingLabel, Row, Col } from \"react-bootstrap\"\r\n\r\n\r\nconst NumberConverter = () => {\r\n\r\n    const [number, setNumber] = useState(\"\")\r\n    const [baseGiven, setBaseGiven] = useState(\"10\")\r\n    const [baseWanted, setBaseWanted] = useState(\"2\")\r\n    const [calcSteps, setCalcSteps] = useState(\"\")\r\n\r\n    const btnDisabled = !number || !baseGiven || !baseWanted\r\n\r\n    const getDigits = (base) => {\r\n        return base === \"16\"\r\n            ? [...Array(10).keys(), ...[\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"]].map(x => x.toString())\r\n            : [...Array(parseInt(base)).keys()].map(x => x.toString())\r\n    }\r\n\r\n    const onChangeGivenNumber = (event) => {\r\n        const { value } = event.target\r\n\r\n        let digits = getDigits(baseGiven)\r\n        let valid = validateNumber(value, digits)\r\n\r\n\r\n        if (valid) setNumber(value)\r\n\r\n    }\r\n\r\n    const onChangeGivenBase = (event) => {\r\n        const { value } = event.target\r\n        let digits = getDigits(value)\r\n        setBaseGiven(value)\r\n\r\n        if (!validateNumber(number, digits)) setNumber(\"0\");\r\n    }\r\n\r\n    const validateNumber = (number, digits) => {\r\n        return [...number].every(item => digits.includes(item.toString()))\r\n    }\r\n\r\n    const calculateAny = () => {\r\n        let deziNumber = 0\r\n        let steps = \"\"\r\n        if (baseGiven !== \"10\") {\r\n            [...number].reverse().forEach((digit, i) => {\r\n                let convertedDigit\r\n                switch (digit) {\r\n                    case \"a\":\r\n                        convertedDigit = 10\r\n                        break\r\n                    case \"b\":\r\n                        convertedDigit = 11\r\n                        break\r\n                    case \"c\":\r\n                        convertedDigit = 12\r\n                        break\r\n                    case \"d\":\r\n                        convertedDigit = 13\r\n                        break\r\n                    case \"e\":\r\n                        convertedDigit = 14\r\n                        break\r\n                    case \"f\":\r\n                        convertedDigit = 15\r\n                        break\r\n                    default:\r\n                        convertedDigit = parseInt(digit)\r\n                }\r\n                let deziDigits = convertedDigit * Math.pow(parseInt(baseGiven), i)\r\n                steps = steps + `${convertedDigit} * ${baseGiven} ^ ${i} = ${deziDigits}\\n`\r\n                deziNumber += deziDigits\r\n\r\n            })\r\n            steps = steps + `${number} to the base ${baseGiven} is ${deziNumber} in dezimal \\n\\n\\n`\r\n\r\n            calculate(deziNumber, steps)\r\n        } else {\r\n            calculate(number)\r\n        }\r\n    }\r\n\r\n    const calculate = (dezimalNumber, preSteps) => {\r\n        let digits = [];\r\n        let n = dezimalNumber;\r\n        let b = parseInt(baseWanted)\r\n        let steps = preSteps || \"\"\r\n\r\n        while (true) {\r\n            let oldN = n\r\n            let r = n % b;\r\n            n = Math.floor(n / b);\r\n            let convertedR\r\n            switch (r) {\r\n                case 10:\r\n                    convertedR = 'a'\r\n                    break\r\n                case 11:\r\n                    convertedR = 'b'\r\n                    break\r\n                case 12:\r\n                    convertedR = 'c'\r\n                    break\r\n                case 13:\r\n                    convertedR = 'd'\r\n                    break\r\n                case 14:\r\n                    convertedR = 'e'\r\n                    break\r\n                case 15:\r\n                    convertedR = 'f'\r\n                    break\r\n                default:\r\n                    convertedR = r\r\n\r\n            }\r\n\r\n            digits.push(convertedR);\r\n            steps = steps + `dividing ${oldN} by ${b} gives ${n} rest ${convertedR}\\n`\r\n            if (n === 0) break;\r\n        }\r\n\r\n        digits.reverse();\r\n\r\n        let convertedNumber = digits.join('');\r\n\r\n        steps = steps + `The converted number is ${convertedNumber} to the base ${baseWanted}`\r\n\r\n        setCalcSteps(steps)\r\n    }\r\n\r\n    const dynHeight = [...calcSteps].reduce((a, v) => v === \"\\n\" ? a + 1 : a, 0) * 35\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"g-2\">\r\n                <Col md>\r\n\r\n\r\n                    <FloatingLabel controlId=\"floatingSelect1\" label=\"Given Base\">\r\n                        <Form.Select value={baseGiven} onChange={onChangeGivenBase}>\r\n                            <option value=\"2\">2</option>\r\n                            <option value=\"8\">8</option>\r\n                            <option value=\"16\">16</option>\r\n                            <option value=\"10\">10</option>\r\n                        </Form.Select>\r\n                    </FloatingLabel>\r\n                </Col>\r\n                <Col>\r\n                    <FormControl value={number} onChange={onChangeGivenNumber} placeholder=\"enter number\" disabled={!baseGiven} />\r\n                </Col>\r\n                <Col>\r\n\r\n                    <FloatingLabel controlId=\"floatingSelect2\" label=\"Wanted Base\">\r\n                        <Form.Select value={baseWanted} onChange={(event) => setBaseWanted(event.target.value)}>\r\n                            <option value=\"2\">2</option>\r\n                            <option value=\"8\">8</option>\r\n                            <option value=\"16\">16</option>\r\n                            <option value=\"10\">10</option>\r\n                        </Form.Select>\r\n                    </FloatingLabel>\r\n                </Col>\r\n            </Row>\r\n            <div style={{textAlign: 'center'}}><Button disabled={btnDisabled} onClick={calculateAny}>Calculate</Button></div>\r\n            \r\n\r\n            <Form.Control\r\n                disabled\r\n                as=\"textarea\"\r\n                placeholder=\"Click calculate button to show calculation steps...\"\r\n                value={calcSteps}\r\n                style={{ height: dynHeight + 'px' }}\r\n            />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NumberConverter","export const dezimalToBinary = (number) => {\r\n\r\n    let digits = [];\r\n    let n = number;\r\n\r\n    while (true) {\r\n        let r = n % 2;\r\n        n = Math.floor(n / 2);\r\n        digits.push(r);\r\n        if (n === 0) break;\r\n    }\r\n\r\n    digits.reverse();\r\n\r\n    return digits.join('');\r\n}\r\n\r\n\r\nexport const binaryToDezimal = (binary) => {\r\n    let dezi = 0;\r\n\r\n    [...binary].reverse().forEach((digit, i) => {\r\n        if (digit === \"1\") dezi += Math.pow(2, i);\r\n    })\r\n\r\n    return dezi;\r\n}\r\n\r\nexport const anyNumberToDezimal = (anyNumber, base) => {\r\n    let dezi = 0;\r\n\r\n    [...anyNumber].reverse().forEach((digit, i) => {\r\n        dezi += parseInt(digit) * Math.pow(base, i);\r\n    })\r\n\r\n    return dezi;\r\n}\r\n\r\nexport const addLeadingZeroes = (value, binarySize) => {\r\n    let size = binarySize ? binarySize : 8;\r\n    let digits = [...value];\r\n    while (digits.length < size) {\r\n        digits.unshift(\"0\")\r\n    }\r\n    let binary = digits.join('');\r\n    return binary;\r\n}\r\n\r\nexport const booleanANDBinary = (a, b) => {\r\n\r\n    let foo = [a, b].sort((i, j) => i.length > j.length ? 1 : -1);\r\n\r\n    while (foo[0].length < foo[1].length) {\r\n        foo[0] = \"0\" + foo[0];\r\n    }\r\n\r\n    let binary = \"\";\r\n\r\n    [...foo[0]].forEach((digit, i) => {\r\n        digit === \"1\" && foo[1][i] === \"1\" ? binary += \"1\" : binary += \"0\"\r\n    })\r\n\r\n    return binary\r\n}\r\n\r\nexport const isValidNumber = (value) => {\r\n    return [...value].every(item => [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"].includes(item))\r\n}\r\n\r\nexport const maxBinary = (value, valueB) => {\r\n    let exponent = [...value].filter(a => a === \"0\").length\r\n    let fooVal = exponent === 0 ? binaryToDezimal(valueB) : Math.pow(2, exponent) - 1\r\n    return fooVal\r\n}\r\n\r\nexport const consecutiveBinary = (value) => {\r\n    return value.split(\"0\").filter(i => i !== \"\").length <= 1 && (value[0] !== \"0\" || [...value].every(item => item === \"0\"))\r\n}\r\n\r\nexport const getSubnetBits = (subnetOctets) => {\r\n    return subnetOctets.map(item =>\r\n        [...item].some(x => x === \"0\")\r\n            ? [...item].reduce((a, v) => v === \"1\" ? a + 1 : a, 0)\r\n            : 0\r\n    ).reduce((sum, x) => sum + x)\r\n}\r\n\r\nexport const getSubnetCount = (subnetOctets) => {\r\n    const subnetBits = subnetOctets.map(item =>\r\n        [...item].some(x => x === \"0\")\r\n            ? [...item].reduce((a, v) => v === \"1\" ? a + 1 : a, 0)\r\n            : 0\r\n    ).reduce((sum, x) => sum + x)\r\n\r\n    return Math.pow(2, subnetBits)\r\n}\r\n\r\nexport const getNetworkIncrement = (subnetOctets) => {\r\n    return Math.pow(2, subnetOctets.filter(item => item === \"0\").length)\r\n}\r\n\r\nexport const getMixedOctetIndex = (octets) => {\r\n    return octets.findIndex((x => ![...x].every(y => y === \"1\")))\r\n}\r\n\r\nexport const getNetworkIDs = (addr, subnetMask) => {\r\n\r\n    const networkIncrement = getNetworkIncrement(subnetMask.flat().join('').split('')) // blyat\r\n\r\n    const baseNetwork = addr.map((octet, i) => booleanANDBinary(octet, subnetMask[i]))\r\n\r\n\r\n    const firstSubnet = baseNetwork.map((octet, i) =>\r\n        [...subnetMask[i]].includes(\"0\") ? [\"00000000\"] : octet\r\n    )\r\n\r\n    let broadcast = subnetMask.map((x, i) => maxBinary(x, addr[i]))\r\n\r\n    const mixedOctetIndex = getMixedOctetIndex(subnetMask)\r\n\r\n    let bla = 0\r\n    let subnets = []\r\n\r\n    let bar = [...subnetMask.slice(mixedOctetIndex).join('')]\r\n\r\n    while (bla <= binaryToDezimal(bar)) {\r\n        // FML!!!\r\n        let networkID = addLeadingZeroes(dezimalToBinary(binaryToDezimal([...firstSubnet].join('')) + bla))\r\n            .match(/.{1,8}/g).map(x => binaryToDezimal(x))\r\n        let broadcast = addLeadingZeroes(dezimalToBinary(binaryToDezimal([...firstSubnet].join('')) + bla + networkIncrement - 1))\r\n            .match(/.{1,8}/g).map(x => binaryToDezimal(x))\r\n        let rangeStart = addLeadingZeroes(dezimalToBinary(binaryToDezimal([...firstSubnet].join('')) + bla + 1))\r\n            .match(/.{1,8}/g).map(x => binaryToDezimal(x))\r\n        let rangeEnd = addLeadingZeroes(dezimalToBinary(binaryToDezimal([...firstSubnet].join('')) + bla + networkIncrement - 2))\r\n            .match(/.{1,8}/g).map(x => binaryToDezimal(x))\r\n        subnets.push({networkID, networkRange: [rangeStart, rangeEnd], broadcast})\r\n        bla += networkIncrement\r\n    }\r\n\r\n\r\n    subnetMask.forEach((item, i) => {\r\n        let bits = [...item].reduce((a, v) => v === \"0\" ? a + 1 : a, 0)\r\n        if ([...item].some(x => x === \"0\")) {\r\n            broadcast[i] = binaryToDezimal(baseNetwork[i]) + Math.pow(2, bits) - 1\r\n        }\r\n    })\r\n\r\n    return subnets\r\n}","import React from \"react\";\r\nimport { InputGroup, FormControl } from \"react-bootstrap\";\r\nimport { binaryToDezimal, dezimalToBinary, addLeadingZeroes, isValidNumber, consecutiveBinary } from \"./utils\";\r\n\r\n\r\n\r\nconst IPV4Component = (props) => {\r\n\r\n    const setDeziHandler = (event, index) => {\r\n\r\n        const value = event.target.value === \"\" ? \"0\" : event.target.value\r\n\r\n        let { setDezi } = props.mehStuff[index];\r\n\r\n        const number = parseInt(value);\r\n\r\n        if (number >= 0 && number <= 255 && isValidNumber(value)) {\r\n            setDezi(number)\r\n            let binary = dezimalToBinary(number);\r\n            addLeadingZeroesHandler(binary, index);\r\n        }\r\n    }\r\n\r\n    const setOctetHandler = (event, index) => {\r\n        let { value } = event.target;\r\n\r\n        let { setDezi, setOctet } = props.mehStuff[index];\r\n\r\n        if ([...value].every(n => [\"0\", \"1\"].includes(n))) {\r\n\r\n            setOctet(value);\r\n\r\n            let number = binaryToDezimal(value);\r\n            setDezi(number);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const addLeadingZeroesHandler = (value, index) => {\r\n        let { setOctet } = props.mehStuff[index];\r\n        let binary = addLeadingZeroes(value);\r\n        setOctet(binary);\r\n    }\r\n\r\n\r\n    const [elem1, elem2, elem3, elem4] = props.mehStuff;\r\n    const { mehStuff, restricted } = props\r\n\r\n    let octet = \"\"\r\n    const [style1, style2, style3, style4] = [...mehStuff].map(item => {\r\n        if (restricted) {\r\n            octet = octet + item.octet\r\n            return consecutiveBinary(octet) ? {} : {border: 'solid red 1px'}\r\n        } else {\r\n            return {}\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <h3>{props.title}</h3>\r\n            <InputGroup className=\"mb-3\">\r\n                <InputGroup.Text>Dezimal</InputGroup.Text>\r\n                <FormControl style={style1} value={elem1.dezi} type=\"text\" onChange={(event) => { setDeziHandler(event, 0) }} />\r\n                <FormControl style={style2} value={elem2.dezi} type=\"text\" onChange={(event) => { setDeziHandler(event, 1) }} />\r\n                <FormControl style={style3} value={elem3.dezi} type=\"text\" onChange={(event) => { setDeziHandler(event, 2) }} />\r\n                <FormControl style={style4} value={elem4.dezi} type=\"text\" onChange={(event) => { setDeziHandler(event, 3) }} />\r\n            </InputGroup>\r\n            <InputGroup className=\"mb-3\">\r\n                <InputGroup.Text>Binary</InputGroup.Text>\r\n                <FormControl style={style1} value={elem1.octet} type=\"text\" onChange={(event) => setOctetHandler(event, 0)} onBlur={(event) => { addLeadingZeroesHandler(event.target.value, 0) }} />\r\n                <FormControl style={style2} value={elem2.octet} type=\"text\" onChange={(event) => setOctetHandler(event, 1)} onBlur={(event) => { addLeadingZeroesHandler(event.target.value, 1) }} />\r\n                <FormControl style={style3} value={elem3.octet} type=\"text\" onChange={(event) => setOctetHandler(event, 2)} onBlur={(event) => { addLeadingZeroesHandler(event.target.value, 2) }} />\r\n                <FormControl style={style4} value={elem4.octet} type=\"text\" onChange={(event) => setOctetHandler(event, 3)} onBlur={(event) => { addLeadingZeroesHandler(event.target.value, 3) }} />\r\n            </InputGroup>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default IPV4Component;","import React from \"react\"\r\nimport { Table } from \"react-bootstrap\"\r\n\r\n\r\nconst SubnetResultComponent = (props) => {\r\n\r\n    const { subnets } = props\r\n\r\n    const tableData = subnets.map((subnet, i) => {\r\n        return (\r\n            <tr key={i}>\r\n                <td>{i + 1}</td>\r\n                <td>{subnet.networkID.join('.')}</td>\r\n                <td>{subnet.networkRange[0].join('.')} - {subnet.networkRange[1].join('.')}</td>\r\n                <td>{subnet.broadcast.join('.')}</td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n    )\r\n\r\n    return (\r\n        <Table striped bordered hover>\r\n            <thead>\r\n                <tr>\r\n                    <th>#</th>\r\n                    <th>NetworkID</th>\r\n                    <th>NetworkRange</th>\r\n                    <th>Broadcast</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {tableData}\r\n            </tbody>\r\n        </Table>\r\n    )\r\n}\r\n\r\n\r\nexport default SubnetResultComponent","import React from \"react\";\r\nimport { booleanANDBinary, binaryToDezimal, maxBinary, getNetworkIDs } from \"./utils\";\r\nimport SubnetResultComponent from \"./SubnetResult\";\r\n\r\nconst IPV4SolverComponent = (props) => {\r\n\r\n\r\n    const { mehStuff: [elemA, elemB] } = props;\r\n    const addrOctets = elemA.map(x => x.octet)\r\n    const octets = elemA.map((item, i) => booleanANDBinary(item.octet, elemB[i].octet))\r\n\r\n    const [subOctet1, subOctet2, subOctet3, subOctet4] = elemB.map(item => item.octet)\r\n\r\n    const bcDezis = elemB.map((item, i) => maxBinary(item.octet, elemA[i].octet))\r\n\r\n    const subOctets = [subOctet1, subOctet2, subOctet3, subOctet4]\r\n\r\n    //let subnetIncrementExponent = 0\r\n    subOctets.forEach((item,i) => {\r\n        let bits = [...item].reduce((a,v) => v === \"0\" ? a + 1 : a ,0)\r\n        if ([...item].some(x => x === \"0\")) {\r\n            bcDezis[i] = binaryToDezimal(octets[i]) + Math.pow(2, bits) - 1\r\n        }\r\n    //    subnetIncrementExponent += bits\r\n    })\r\n\r\n\r\n    let subnets = getNetworkIDs(addrOctets,subOctets)\r\n    return (\r\n        <>\r\n        \r\n            <SubnetResultComponent subnets={subnets}/>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default IPV4SolverComponent;","import { useState } from \"react\";\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Container, Accordion } from \"react-bootstrap\";\r\nimport NumberConverter from \"./NumberConverter\";\r\nimport IPV4Component from \"./IPV4Component\";\r\nimport IPV4SolverComponent from \"./IPV4SolverComponent\";\r\n\r\n\r\nconst App = () => {\r\n\r\n    const [octet1, setOctet1] = useState(\"11000000\");\r\n    const [octet2, setOctet2] = useState(\"10101000\");\r\n    const [octet3, setOctet3] = useState(\"00000001\");\r\n    const [octet4, setOctet4] = useState(\"00000000\");\r\n\r\n    const [dezi1, setDezi1] = useState(192);\r\n    const [dezi2, setDezi2] = useState(168);\r\n    const [dezi3, setDezi3] = useState(1);\r\n    const [dezi4, setDezi4] = useState(0);\r\n\r\n    const [subOctet1, setSubOctet1] = useState(\"11111111\");\r\n    const [subOctet2, setSubOctet2] = useState(\"11111111\");\r\n    const [subOctet3, setSubOctet3] = useState(\"11111111\");\r\n    const [subOctet4, setSubOctet4] = useState(\"11100000\");\r\n\r\n    const [subDezi1, setSubDezi1] = useState(255);\r\n    const [subDezi2, setSubDezi2] = useState(255);\r\n    const [subDezi3, setSubDezi3] = useState(255);\r\n    const [subDezi4, setSubDezi4] = useState(224);\r\n\r\n\r\n    const mehStuff = [\r\n        [\r\n            {\r\n                setOctet: setOctet1,\r\n                setDezi: setDezi1,\r\n                octet: octet1,\r\n                dezi: dezi1\r\n            },\r\n            {\r\n                setOctet: setOctet2,\r\n                setDezi: setDezi2,\r\n                octet: octet2,\r\n                dezi: dezi2\r\n            },\r\n            {\r\n                setOctet: setOctet3,\r\n                setDezi: setDezi3,\r\n                octet: octet3,\r\n                dezi: dezi3\r\n            },\r\n            {\r\n                setOctet: setOctet4,\r\n                setDezi: setDezi4,\r\n                octet: octet4,\r\n                dezi: dezi4\r\n            }\r\n        ],\r\n        [\r\n            {\r\n                setOctet: setSubOctet1,\r\n                setDezi: setSubDezi1,\r\n                octet: subOctet1,\r\n                dezi: subDezi1\r\n            },\r\n            {\r\n                setOctet: setSubOctet2,\r\n                setDezi: setSubDezi2,\r\n                octet: subOctet2,\r\n                dezi: subDezi2\r\n            },\r\n            {\r\n                setOctet: setSubOctet3,\r\n                setDezi: setSubDezi3,\r\n                octet: subOctet3,\r\n                dezi: subDezi3\r\n            },\r\n            {\r\n                setOctet: setSubOctet4,\r\n                setDezi: setSubDezi4,\r\n                octet: subOctet4,\r\n                dezi: subDezi4\r\n            }\r\n        ]\r\n    ];\r\n\r\n    const addrCount = Math.pow(2, [...subOctet1, ...subOctet2, ...subOctet3, ...subOctet4].filter(item => item === \"0\").length) - 2\r\n    const subnetBits = [subOctet1, subOctet2, subOctet3, subOctet4].map(item =>\r\n        [...item].some(x => x === \"0\")\r\n            ? [...item].reduce((a, v) => v === \"1\" ? a + 1 : a, 0)\r\n            : 0\r\n    ).reduce((sum, x) => sum + x)\r\n\r\n    const subnetCount = Math.pow(2, subnetBits)\r\n\r\n    return (\r\n\r\n\r\n        <Container>\r\n            <Accordion defaultActiveKey=\"0\">\r\n                <Accordion.Item eventKey=\"0\">\r\n                    <Accordion.Header>Calculation Visualization</Accordion.Header>\r\n                    <Accordion.Body>\r\n                       <NumberConverter />\r\n                    </Accordion.Body>\r\n                </Accordion.Item>\r\n                <Accordion.Item eventKey=\"1\">\r\n                    <Accordion.Header>IPV4Stuff</Accordion.Header>\r\n                    <Accordion.Body>\r\n                        <IPV4Component title={\"IP-Address\"} mehStuff={mehStuff[0]} />\r\n                        <IPV4Component title={\"Subnet Mask\"} mehStuff={mehStuff[1]} restricted />\r\n                        <h3>There are {subnetCount} subnets with {addrCount} hosts each available.</h3>\r\n                        <IPV4SolverComponent title={\"Network Address\"} mehStuff={mehStuff} />\r\n                    </Accordion.Body>\r\n                </Accordion.Item>\r\n            </Accordion>\r\n\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}