{"version":3,"sources":["DezimalConverter.js","utils.js","IPV4Component.js","IPV4SolverComponent.js","App.js","reportWebVitals.js","index.js"],"names":["DezimalConverter","useState","dezimalNumber","setDezimalNumber","base","setBase","calcSteps","setCalcSteps","btnDisabled","InputGroup","className","Text","FormControl","value","onChange","event","target","parseInt","Form","Select","Button","disabled","onClick","digits","n","b","steps","oldN","r","Math","floor","convertedR","push","reverse","convertedNumber","join","Control","as","placeholder","style","height","dynHeight","dezimalToBinary","number","binaryToDezimal","binary","dezi","forEach","digit","i","pow","addLeadingZeroes","binarySize","size","length","unshift","IPV4Component","props","setDeziHandler","index","setDezi","mehStuff","every","item","includes","isValidNumber","addLeadingZeroesHandler","setOctetHandler","setOctet","elem1","elem2","elem3","elem4","restricted","octet","map","split","filter","border","style1","style2","style3","style4","title","type","onBlur","IPV4SolverComponent","elemA","elemB","octets","a","foo","sort","j","booleanANDBinary","octet1","octet2","octet3","octet4","subOctet1","subOctet2","subOctet3","subOctet4","bcDezis","valueB","exponent","maxBinary","bits","reduce","v","some","x","bcDezi1","bcDezi2","bcDezi3","bcDezi4","min","max","App","setOctet1","setOctet2","setOctet3","setOctet4","dezi1","setDezi1","dezi2","setDezi2","dezi3","setDezi3","dezi4","setDezi4","setSubOctet1","setSubOctet2","setSubOctet3","setSubOctet4","subDezi1","setSubDezi1","subDezi2","setSubDezi2","subDezi3","setSubDezi3","subDezi4","addrCount","subnetBits","sum","subnetCount","Container","Accordion","defaultActiveKey","Item","eventKey","Header","Body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf2cbc27.chunk.js","sourcesContent":["import React, { useState } from \"react\"\r\nimport { InputGroup, FormControl, Form, Button } from \"react-bootstrap\"\r\n\r\n\r\nconst DezimalConverter = () => {\r\n\r\n    const [dezimalNumber, setDezimalNumber] = useState(0)\r\n    const [base, setBase] = useState(\"\")\r\n    const [calcSteps, setCalcSteps] = useState(\"\")\r\n\r\n    const btnDisabled = !dezimalNumber || !base\r\n\r\n    const onChangeDezimal = (event) => {\r\n        const { value } = event.target\r\n        parseInt(value) >= 0 ? setDezimalNumber(parseInt(value)) : setDezimalNumber(0)\r\n    }\r\n\r\n    const onChangeBase = (event) => {\r\n        setBase(event.target.value)\r\n    }\r\n\r\n    const calculate = () => {\r\n        let digits = [];\r\n        let n = dezimalNumber;\r\n        let b = parseInt(base)\r\n        let steps = \"\"\r\n        while (true) {\r\n            let oldN = n\r\n            let r = n % b;\r\n            n = Math.floor(n / b);\r\n            let convertedR\r\n            switch(r) {\r\n                    case 10:\r\n                        convertedR = 'A'\r\n                        break\r\n                    case 11:\r\n                        convertedR = 'B'\r\n                        break\r\n                    case 12:\r\n                        convertedR = 'C'\r\n                        break\r\n                    case 13:\r\n                        convertedR = 'D'\r\n                        break\r\n                    case 14:\r\n                        convertedR = 'E'\r\n                        break\r\n                    case 15:\r\n                        convertedR = 'F'\r\n                        break\r\n                    default:\r\n                        convertedR = r\r\n\r\n            }\r\n\r\n            digits.push(convertedR);\r\n            steps = steps + `dividing ${oldN} by ${b} gives ${n} rest ${convertedR}\\n`\r\n            if (n === 0) break;\r\n        }\r\n\r\n        digits.reverse();\r\n\r\n        let convertedNumber = digits.join('');\r\n\r\n        steps = steps + `The converted number is ${convertedNumber}`\r\n\r\n        setCalcSteps(steps)\r\n    }\r\n\r\n    const dynHeight = 400\r\n\r\n    return (\r\n        <>\r\n            <InputGroup className=\"mb-3\">\r\n                <InputGroup.Text>Dezimal</InputGroup.Text>\r\n                <FormControl value={dezimalNumber} onChange={onChangeDezimal} />\r\n                <Form.Select value={base} onChange={onChangeBase}>\r\n                    <option>select base</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"8\">8</option>\r\n                    <option value=\"16\">16</option>\r\n                </Form.Select>\r\n                <Button disabled={btnDisabled} onClick={calculate}>Calculate</Button>\r\n            </InputGroup>\r\n            <Form.Control\r\n                disabled\r\n                as=\"textarea\"\r\n                placeholder=\"Click calculate button to show calculation steps...\"\r\n                value={calcSteps}\r\n                style={{ height: dynHeight + 'px' }}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DezimalConverter","export const dezimalToBinary = (number) => {\r\n\r\n    let digits = [];\r\n    let n = number;\r\n\r\n    while (true) {\r\n        let r = n % 2;\r\n        n = Math.floor(n / 2);\r\n        digits.push(r);\r\n        if (n === 0) break;\r\n    }\r\n\r\n    digits.reverse();\r\n\r\n    return digits.join('');\r\n}\r\n\r\n\r\nexport const binaryToDezimal = (binary) => {\r\n    let dezi = 0;\r\n    \r\n    [...binary].reverse().forEach((digit, i) => {\r\n        if (digit === \"1\") dezi += Math.pow(2, i);\r\n    })\r\n\r\n    return dezi;\r\n}\r\n\r\nexport const addLeadingZeroes = (value, binarySize) => {\r\n    let size = binarySize ? binarySize : 8;\r\n    let digits = [...value];\r\n    while (digits.length < size) {\r\n        digits.unshift(\"0\")\r\n    }\r\n    let binary = digits.join('');\r\n    return binary;\r\n}\r\n\r\nexport const booleanANDBinary = (a,b) => {\r\n\r\n    let foo = [a,b].sort((i,j) => i.length > j.length ? 1 : -1);\r\n\r\n    while (foo[0].length < foo[1].length) {\r\n        foo[0] = \"0\" + foo[0];\r\n    }\r\n\r\n    let binary = \"\";\r\n\r\n    [...foo[0]].forEach((digit, i) => {\r\n        digit === \"1\" && foo[1][i] === \"1\" ? binary += \"1\" : binary += \"0\"\r\n    })\r\n\r\n    return binary\r\n}\r\n\r\nexport const isValidNumber = (value) => {\r\n    return [...value].every(item => [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"].includes(item))\r\n}\r\n\r\nexport const maxBinary = (value, valueB) => {\r\n    let exponent = [...value].filter(a => a === \"0\").length\r\n    let fooVal = exponent === 0 ? binaryToDezimal(valueB) : Math.pow(2, exponent) - 1\r\n    return fooVal\r\n}\r\n\r\nexport const consecutiveBinary = (value) => {\r\n    return value.split(\"0\").filter(i => i !== \"\").length <= 1 && (value[0] !== \"0\" || [...value].every(item => item === \"0\"))\r\n}","import React from \"react\";\r\nimport { InputGroup, FormControl } from \"react-bootstrap\";\r\nimport { binaryToDezimal, dezimalToBinary, addLeadingZeroes, isValidNumber, consecutiveBinary } from \"./utils\";\r\n\r\n\r\n\r\nconst IPV4Component = (props) => {\r\n\r\n    const setDeziHandler = (event, index) => {\r\n\r\n        const value = event.target.value === \"\" ? \"0\" : event.target.value\r\n\r\n        let { setDezi } = props.mehStuff[index];\r\n\r\n        const number = parseInt(value);\r\n\r\n        if (number >= 0 && number <= 255 && isValidNumber(value)) {\r\n            setDezi(number)\r\n            let binary = dezimalToBinary(number);\r\n            addLeadingZeroesHandler(binary, index);\r\n        }\r\n    }\r\n\r\n    const setOctetHandler = (event, index) => {\r\n        let { value } = event.target;\r\n\r\n        let { setDezi, setOctet } = props.mehStuff[index];\r\n\r\n        if ([...value].every(n => [\"0\", \"1\"].includes(n))) {\r\n\r\n            setOctet(value);\r\n\r\n            let number = binaryToDezimal(value);\r\n            setDezi(number);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const addLeadingZeroesHandler = (value, index) => {\r\n        let { setOctet } = props.mehStuff[index];\r\n        let binary = addLeadingZeroes(value);\r\n        setOctet(binary);\r\n    }\r\n\r\n\r\n    const [elem1, elem2, elem3, elem4] = props.mehStuff;\r\n    const { mehStuff, restricted } = props\r\n\r\n    let octet = \"\"\r\n    const [style1, style2, style3, style4] = [...mehStuff].map(item => {\r\n        if (restricted) {\r\n            octet = octet + item.octet\r\n            return consecutiveBinary(octet) ? {} : {border: 'solid red 1px'}\r\n        } else {\r\n            return {}\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <h3>{props.title}</h3>\r\n            <InputGroup className=\"mb-3\">\r\n                <InputGroup.Text>Dezimal</InputGroup.Text>\r\n                <FormControl style={style1} value={elem1.dezi} type=\"text\" onChange={(event) => { setDeziHandler(event, 0) }} />\r\n                <FormControl style={style2} value={elem2.dezi} type=\"text\" onChange={(event) => { setDeziHandler(event, 1) }} />\r\n                <FormControl style={style3} value={elem3.dezi} type=\"text\" onChange={(event) => { setDeziHandler(event, 2) }} />\r\n                <FormControl style={style4} value={elem4.dezi} type=\"text\" onChange={(event) => { setDeziHandler(event, 3) }} />\r\n            </InputGroup>\r\n            <InputGroup className=\"mb-3\">\r\n                <InputGroup.Text>Binary</InputGroup.Text>\r\n                <FormControl style={style1} value={elem1.octet} type=\"text\" onChange={(event) => setOctetHandler(event, 0)} onBlur={(event) => { addLeadingZeroesHandler(event.target.value, 0) }} />\r\n                <FormControl style={style2} value={elem2.octet} type=\"text\" onChange={(event) => setOctetHandler(event, 1)} onBlur={(event) => { addLeadingZeroesHandler(event.target.value, 1) }} />\r\n                <FormControl style={style3} value={elem3.octet} type=\"text\" onChange={(event) => setOctetHandler(event, 2)} onBlur={(event) => { addLeadingZeroesHandler(event.target.value, 2) }} />\r\n                <FormControl style={style4} value={elem4.octet} type=\"text\" onChange={(event) => setOctetHandler(event, 3)} onBlur={(event) => { addLeadingZeroesHandler(event.target.value, 3) }} />\r\n            </InputGroup>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default IPV4Component;","import React from \"react\";\r\nimport { InputGroup, FormControl } from \"react-bootstrap\";\r\nimport { booleanANDBinary, binaryToDezimal, maxBinary, dezimalToBinary, addLeadingZeroes } from \"./utils\";\r\n\r\nconst IPV4SolverComponent = (props) => {\r\n\r\n\r\n    const { mehStuff: [elemA, elemB] } = props;\r\n\r\n    const octets = elemA.map((item, i) => booleanANDBinary(item.octet, elemB[i].octet))\r\n    const [octet1, octet2, octet3, octet4] = octets\r\n    const [subOctet1, subOctet2, subOctet3, subOctet4] = elemB.map(item => item.octet)\r\n\r\n    const bcDezis = elemB.map((item, i) => maxBinary(item.octet, elemA[i].octet))\r\n\r\n    const subOctets = [subOctet1, subOctet2, subOctet3, subOctet4]\r\n\r\n    subOctets.forEach((item,i) => {\r\n        let bits = [...item].reduce((a,v) => v === \"0\" ? a + 1 : a ,0)\r\n        if ([...item].some(x => x === \"0\")) {\r\n            bcDezis[i] = binaryToDezimal(octets[i]) + Math.pow(2, bits) - 1\r\n        }\r\n    })\r\n\r\n    const [bcDezi1, bcDezi2, bcDezi3, bcDezi4] = bcDezis\r\n\r\n    return (\r\n        <>\r\n            <h3>{props.title}</h3>\r\n            <InputGroup className=\"mb-3\">\r\n                <InputGroup.Text>Dezimal</InputGroup.Text>\r\n                <FormControl type=\"number\" min=\"0\" max=\"255\" value={binaryToDezimal(octet1)} disabled />\r\n                <FormControl type=\"number\" min=\"0\" max=\"255\" value={binaryToDezimal(octet2)} disabled />\r\n                <FormControl type=\"number\" min=\"0\" max=\"255\" value={binaryToDezimal(octet3)} disabled />\r\n                <FormControl type=\"number\" min=\"0\" max=\"255\" value={binaryToDezimal(octet4)} disabled />\r\n            </InputGroup>\r\n            <InputGroup className=\"mb-3\">\r\n                <InputGroup.Text>Binary</InputGroup.Text>\r\n                <FormControl type=\"text\" value={octet1} disabled />\r\n                <FormControl type=\"text\" value={octet2} disabled />\r\n                <FormControl type=\"text\" value={octet3} disabled />\r\n                <FormControl type=\"text\" value={octet4} disabled />\r\n            </InputGroup>\r\n            <h3>Broadcast Address</h3>\r\n            <InputGroup className=\"mb-3\">\r\n                <InputGroup.Text>Dezimal</InputGroup.Text>\r\n                <FormControl type=\"number\" min=\"0\" max=\"255\" value={bcDezi1} disabled />\r\n                <FormControl type=\"number\" min=\"0\" max=\"255\" value={bcDezi2} disabled />\r\n                <FormControl type=\"number\" min=\"0\" max=\"255\" value={bcDezi3} disabled />\r\n                <FormControl type=\"number\" min=\"0\" max=\"255\" value={bcDezi4} disabled />\r\n            </InputGroup>\r\n            <InputGroup className=\"mb-3\">\r\n                <InputGroup.Text>Binary</InputGroup.Text>\r\n                <FormControl type=\"text\" value={addLeadingZeroes(dezimalToBinary(bcDezi1))} disabled />\r\n                <FormControl type=\"text\" value={addLeadingZeroes(dezimalToBinary(bcDezi2))} disabled />\r\n                <FormControl type=\"text\" value={addLeadingZeroes(dezimalToBinary(bcDezi3))} disabled />\r\n                <FormControl type=\"text\" value={addLeadingZeroes(dezimalToBinary(bcDezi4))} disabled />\r\n            </InputGroup>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default IPV4SolverComponent;","import { useState } from \"react\";\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Container, Accordion } from \"react-bootstrap\";\r\nimport DezimalConverter from \"./DezimalConverter\";\r\nimport IPV4Component from \"./IPV4Component\";\r\nimport IPV4SolverComponent from \"./IPV4SolverComponent\";\r\n\r\nconst App = () => {\r\n\r\n    const [octet1, setOctet1] = useState(\"00000000\");\r\n    const [octet2, setOctet2] = useState(\"00000000\");\r\n    const [octet3, setOctet3] = useState(\"00000000\");\r\n    const [octet4, setOctet4] = useState(\"00000000\");\r\n\r\n    const [dezi1, setDezi1] = useState(0);\r\n    const [dezi2, setDezi2] = useState(0);\r\n    const [dezi3, setDezi3] = useState(0);\r\n    const [dezi4, setDezi4] = useState(0);\r\n\r\n    const [subOctet1, setSubOctet1] = useState(\"11111111\");\r\n    const [subOctet2, setSubOctet2] = useState(\"11111111\");\r\n    const [subOctet3, setSubOctet3] = useState(\"11111111\");\r\n    const [subOctet4, setSubOctet4] = useState(\"00000000\");\r\n\r\n    const [subDezi1, setSubDezi1] = useState(255);\r\n    const [subDezi2, setSubDezi2] = useState(255);\r\n    const [subDezi3, setSubDezi3] = useState(255);\r\n    const [subDezi4, setSubDezi4] = useState(0);\r\n\r\n\r\n    const mehStuff = [\r\n        [\r\n            {\r\n                setOctet: setOctet1,\r\n                setDezi: setDezi1,\r\n                octet: octet1,\r\n                dezi: dezi1\r\n            },\r\n            {\r\n                setOctet: setOctet2,\r\n                setDezi: setDezi2,\r\n                octet: octet2,\r\n                dezi: dezi2\r\n            },\r\n            {\r\n                setOctet: setOctet3,\r\n                setDezi: setDezi3,\r\n                octet: octet3,\r\n                dezi: dezi3\r\n            },\r\n            {\r\n                setOctet: setOctet4,\r\n                setDezi: setDezi4,\r\n                octet: octet4,\r\n                dezi: dezi4\r\n            }\r\n        ],\r\n        [\r\n            {\r\n                setOctet: setSubOctet1,\r\n                setDezi: setSubDezi1,\r\n                octet: subOctet1,\r\n                dezi: subDezi1\r\n            },\r\n            {\r\n                setOctet: setSubOctet2,\r\n                setDezi: setSubDezi2,\r\n                octet: subOctet2,\r\n                dezi: subDezi2\r\n            },\r\n            {\r\n                setOctet: setSubOctet3,\r\n                setDezi: setSubDezi3,\r\n                octet: subOctet3,\r\n                dezi: subDezi3\r\n            },\r\n            {\r\n                setOctet: setSubOctet4,\r\n                setDezi: setSubDezi4,\r\n                octet: subOctet4,\r\n                dezi: subDezi4\r\n            }\r\n        ]\r\n    ];\r\n\r\n    const addrCount = Math.pow(2, [...subOctet1, ...subOctet2, ...subOctet3, ...subOctet4].filter(item => item === \"0\").length) - 2\r\n    //booleanANDBinary(\"1101\", \"1\")\r\n    const subnetBits = [subOctet1, subOctet2, subOctet3, subOctet4].map(item =>\r\n        [...item].some(x => x === \"0\")\r\n            ? [...item].reduce((a, v) => v === \"1\" ? a + 1 : a, 0)\r\n            : 0\r\n    ).reduce((sum, x) => sum + x)\r\n\r\n    const subnetCount = Math.pow(2, subnetBits)\r\n\r\n    return (\r\n\r\n\r\n        <Container>\r\n            <Accordion defaultActiveKey=\"0\">\r\n                <Accordion.Item eventKey=\"0\">\r\n                    <Accordion.Header>Calculation Visualization</Accordion.Header>\r\n                    <Accordion.Body>\r\n                       <DezimalConverter />\r\n                    </Accordion.Body>\r\n                </Accordion.Item>\r\n                <Accordion.Item eventKey=\"1\">\r\n                    <Accordion.Header>IPV4Stuff</Accordion.Header>\r\n                    <Accordion.Body>\r\n                        <IPV4Component title={\"IP-Address\"} mehStuff={mehStuff[0]} />\r\n                        <IPV4Component title={\"Subnet Mask\"} mehStuff={mehStuff[1]} restricted />\r\n                        <h3>There are {subnetCount} subnets with {addrCount} hosts each available.</h3>\r\n                        <IPV4SolverComponent title={\"Network Address\"} mehStuff={mehStuff} />\r\n                    </Accordion.Body>\r\n                </Accordion.Item>\r\n            </Accordion>\r\n\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}