{"version":3,"sources":["NumberConverter.js","utils.js","IPV4Component.js","IPV4SolverComponent.js","App.js","reportWebVitals.js","index.js"],"names":["NumberConverter","useState","number","setNumber","baseGiven","setBaseGiven","baseWanted","setBaseWanted","calcSteps","setCalcSteps","btnDisabled","getDigits","base","Array","keys","map","x","toString","parseInt","validateNumber","digits","every","item","includes","calculate","dezimalNumber","preSteps","n","b","steps","oldN","r","Math","floor","convertedR","push","reverse","convertedNumber","join","dynHeight","reduce","a","v","InputGroup","className","Form","Select","value","onChange","event","target","FormControl","placeholder","disabled","Button","onClick","deziNumber","forEach","digit","i","convertedDigit","deziDigits","pow","Control","as","style","height","dezimalToBinary","binaryToDezimal","binary","dezi","addLeadingZeroes","binarySize","size","length","unshift","IPV4Component","props","setDeziHandler","index","setDezi","mehStuff","isValidNumber","addLeadingZeroesHandler","setOctetHandler","setOctet","elem1","elem2","elem3","elem4","restricted","octet","split","filter","border","style1","style2","style3","style4","title","Text","type","onBlur","IPV4SolverComponent","elemA","elemB","octets","foo","sort","j","booleanANDBinary","octet1","octet2","octet3","octet4","subOctet1","subOctet2","subOctet3","subOctet4","bcDezis","valueB","exponent","maxBinary","bits","some","bcDezi1","bcDezi2","bcDezi3","bcDezi4","min","max","App","setOctet1","setOctet2","setOctet3","setOctet4","dezi1","setDezi1","dezi2","setDezi2","dezi3","setDezi3","dezi4","setDezi4","setSubOctet1","setSubOctet2","setSubOctet3","setSubOctet4","subDezi1","setSubDezi1","subDezi2","setSubDezi2","subDezi3","setSubDezi3","subDezi4","addrCount","subnetBits","sum","subnetCount","Container","Accordion","defaultActiveKey","Item","eventKey","Header","Body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e35faa87.chunk.js","sourcesContent":["import React, { useState } from \"react\"\r\nimport { InputGroup, FormControl, Form, Button } from \"react-bootstrap\"\r\n\r\n\r\nconst NumberConverter = () => {\r\n\r\n    const [number, setNumber] = useState(\"\")\r\n    const [baseGiven, setBaseGiven] = useState(\"\")\r\n    const [baseWanted, setBaseWanted] = useState(\"\")\r\n    const [calcSteps, setCalcSteps] = useState(\"\")\r\n\r\n    const btnDisabled = !number || !baseGiven || !baseWanted\r\n\r\n    const getDigits = (base) => {\r\n        return base === \"16\"\r\n            ? [...Array(10).keys(), ...[\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"]].map(x => x.toString())\r\n            : [...Array(parseInt(base)).keys()].map(x => x.toString())\r\n    }\r\n\r\n    const onChangeGivenNumber = (event) => {\r\n        const { value } = event.target\r\n\r\n        let digits = getDigits(baseGiven)\r\n        let valid = validateNumber(value, digits)\r\n\r\n\r\n        if (valid) setNumber(value)\r\n\r\n    }\r\n\r\n    const onChangeGivenBase = (event) => {\r\n        const { value } = event.target\r\n        let digits = getDigits(value)\r\n        setBaseGiven(value)\r\n\r\n        if (!validateNumber(number, digits)) setNumber(\"0\");\r\n    }\r\n\r\n    const validateNumber = (number, digits) => {\r\n        return [...number].every(item => digits.includes(item.toString()))\r\n    }\r\n\r\n    const calculateAny = () => {\r\n        let deziNumber = 0\r\n        let steps = \"\"\r\n        if (baseGiven !== \"10\") {\r\n            [...number].reverse().forEach((digit,i) => {\r\n                let convertedDigit\r\n                switch (digit) {\r\n                    case \"a\":\r\n                        convertedDigit = 10\r\n                        break\r\n                    case \"b\":\r\n                        convertedDigit = 11\r\n                        break\r\n                    case \"c\":\r\n                        convertedDigit = 12\r\n                        break\r\n                    case \"d\":\r\n                        convertedDigit = 13\r\n                        break\r\n                    case \"e\":\r\n                        convertedDigit = 14\r\n                        break\r\n                    case \"f\":\r\n                        convertedDigit = 15\r\n                        break\r\n                    default:\r\n                        convertedDigit = parseInt(digit)\r\n                }\r\n                let deziDigits = convertedDigit * Math.pow(parseInt(baseGiven), i)\r\n                steps = steps + `${convertedDigit} * ${baseGiven} ^ ${i} = ${deziDigits}\\n`\r\n                deziNumber += deziDigits\r\n\r\n            })\r\n            steps = steps + `${number} to the base ${baseGiven} is ${deziNumber} in dezimal \\n\\n\\n`\r\n\r\n            calculate(deziNumber, steps)\r\n        } else {\r\n            calculate(number)\r\n        }\r\n    }\r\n\r\n    const calculate = (dezimalNumber, preSteps) => {\r\n        let digits = [];\r\n        let n = dezimalNumber;\r\n        let b = parseInt(baseWanted)\r\n        let steps = preSteps || \"\"\r\n\r\n\r\n        /* if (baseGiven !== \"10\") {\r\n            alert(\"nope!\")\r\n            return\r\n        } */\r\n\r\n\r\n        while (true) {\r\n            let oldN = n\r\n            let r = n % b;\r\n            n = Math.floor(n / b);\r\n            let convertedR\r\n            switch (r) {\r\n                case 10:\r\n                    convertedR = 'a'\r\n                    break\r\n                case 11:\r\n                    convertedR = 'b'\r\n                    break\r\n                case 12:\r\n                    convertedR = 'c'\r\n                    break\r\n                case 13:\r\n                    convertedR = 'd'\r\n                    break\r\n                case 14:\r\n                    convertedR = 'e'\r\n                    break\r\n                case 15:\r\n                    convertedR = 'f'\r\n                    break\r\n                default:\r\n                    convertedR = r\r\n\r\n            }\r\n\r\n            digits.push(convertedR);\r\n            steps = steps + `dividing ${oldN} by ${b} gives ${n} rest ${convertedR}\\n`\r\n            if (n === 0) break;\r\n        }\r\n\r\n        digits.reverse();\r\n\r\n        let convertedNumber = digits.join('');\r\n\r\n        steps = steps + `The converted number is ${convertedNumber} to the base ${baseWanted}`\r\n\r\n        setCalcSteps(steps)\r\n    }\r\n\r\n    const dynHeight = [...calcSteps].reduce((a,v) => v === \"\\n\" ? a + 1 : a ,0) * 30\r\n\r\n    return (\r\n        <>\r\n            <InputGroup className=\"mb-3\">\r\n                <Form.Select value={baseGiven} onChange={onChangeGivenBase}>\r\n                    <option>select base of given number</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"8\">8</option>\r\n                    <option value=\"16\">16</option>\r\n                    <option value=\"10\">10</option>\r\n                </Form.Select>\r\n                <FormControl value={number} onChange={onChangeGivenNumber} placeholder=\"enter number\" disabled={!baseGiven} />\r\n                <Form.Select value={baseWanted} onChange={(event) => setBaseWanted(event.target.value)}>\r\n                    <option>select base of wanted number</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"8\">8</option>\r\n                    <option value=\"16\">16</option>\r\n                    <option value=\"10\">10</option>\r\n                </Form.Select>\r\n                <Button disabled={btnDisabled} onClick={calculateAny}>Calculate</Button>\r\n            </InputGroup>\r\n            <Form.Control\r\n                disabled\r\n                as=\"textarea\"\r\n                placeholder=\"Click calculate button to show calculation steps...\"\r\n                value={calcSteps}\r\n                style={{ height: dynHeight + 'px' }}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NumberConverter","export const dezimalToBinary = (number) => {\r\n\r\n    let digits = [];\r\n    let n = number;\r\n\r\n    while (true) {\r\n        let r = n % 2;\r\n        n = Math.floor(n / 2);\r\n        digits.push(r);\r\n        if (n === 0) break;\r\n    }\r\n\r\n    digits.reverse();\r\n\r\n    return digits.join('');\r\n}\r\n\r\n\r\nexport const binaryToDezimal = (binary) => {\r\n    let dezi = 0;\r\n    \r\n    [...binary].reverse().forEach((digit, i) => {\r\n        if (digit === \"1\") dezi += Math.pow(2, i);\r\n    })\r\n\r\n    return dezi;\r\n}\r\n\r\nexport const anyNumberToDezimal = (anyNumber, base) => {\r\n    let dezi = 0;\r\n    \r\n    [...anyNumber].reverse().forEach((digit, i) => {\r\n        dezi += parseInt(digit) * Math.pow(base, i);\r\n    })\r\n\r\n    return dezi;\r\n}\r\n\r\nexport const addLeadingZeroes = (value, binarySize) => {\r\n    let size = binarySize ? binarySize : 8;\r\n    let digits = [...value];\r\n    while (digits.length < size) {\r\n        digits.unshift(\"0\")\r\n    }\r\n    let binary = digits.join('');\r\n    return binary;\r\n}\r\n\r\nexport const booleanANDBinary = (a,b) => {\r\n\r\n    let foo = [a,b].sort((i,j) => i.length > j.length ? 1 : -1);\r\n\r\n    while (foo[0].length < foo[1].length) {\r\n        foo[0] = \"0\" + foo[0];\r\n    }\r\n\r\n    let binary = \"\";\r\n\r\n    [...foo[0]].forEach((digit, i) => {\r\n        digit === \"1\" && foo[1][i] === \"1\" ? binary += \"1\" : binary += \"0\"\r\n    })\r\n\r\n    return binary\r\n}\r\n\r\nexport const isValidNumber = (value) => {\r\n    return [...value].every(item => [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"].includes(item))\r\n}\r\n\r\nexport const maxBinary = (value, valueB) => {\r\n    let exponent = [...value].filter(a => a === \"0\").length\r\n    let fooVal = exponent === 0 ? binaryToDezimal(valueB) : Math.pow(2, exponent) - 1\r\n    return fooVal\r\n}\r\n\r\nexport const consecutiveBinary = (value) => {\r\n    return value.split(\"0\").filter(i => i !== \"\").length <= 1 && (value[0] !== \"0\" || [...value].every(item => item === \"0\"))\r\n}","import React from \"react\";\r\nimport { InputGroup, FormControl } from \"react-bootstrap\";\r\nimport { binaryToDezimal, dezimalToBinary, addLeadingZeroes, isValidNumber, consecutiveBinary } from \"./utils\";\r\n\r\n\r\n\r\nconst IPV4Component = (props) => {\r\n\r\n    const setDeziHandler = (event, index) => {\r\n\r\n        const value = event.target.value === \"\" ? \"0\" : event.target.value\r\n\r\n        let { setDezi } = props.mehStuff[index];\r\n\r\n        const number = parseInt(value);\r\n\r\n        if (number >= 0 && number <= 255 && isValidNumber(value)) {\r\n            setDezi(number)\r\n            let binary = dezimalToBinary(number);\r\n            addLeadingZeroesHandler(binary, index);\r\n        }\r\n    }\r\n\r\n    const setOctetHandler = (event, index) => {\r\n        let { value } = event.target;\r\n\r\n        let { setDezi, setOctet } = props.mehStuff[index];\r\n\r\n        if ([...value].every(n => [\"0\", \"1\"].includes(n))) {\r\n\r\n            setOctet(value);\r\n\r\n            let number = binaryToDezimal(value);\r\n            setDezi(number);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const addLeadingZeroesHandler = (value, index) => {\r\n        let { setOctet } = props.mehStuff[index];\r\n        let binary = addLeadingZeroes(value);\r\n        setOctet(binary);\r\n    }\r\n\r\n\r\n    const [elem1, elem2, elem3, elem4] = props.mehStuff;\r\n    const { mehStuff, restricted } = props\r\n\r\n    let octet = \"\"\r\n    const [style1, style2, style3, style4] = [...mehStuff].map(item => {\r\n        if (restricted) {\r\n            octet = octet + item.octet\r\n            return consecutiveBinary(octet) ? {} : {border: 'solid red 1px'}\r\n        } else {\r\n            return {}\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <h3>{props.title}</h3>\r\n            <InputGroup className=\"mb-3\">\r\n                <InputGroup.Text>Dezimal</InputGroup.Text>\r\n                <FormControl style={style1} value={elem1.dezi} type=\"text\" onChange={(event) => { setDeziHandler(event, 0) }} />\r\n                <FormControl style={style2} value={elem2.dezi} type=\"text\" onChange={(event) => { setDeziHandler(event, 1) }} />\r\n                <FormControl style={style3} value={elem3.dezi} type=\"text\" onChange={(event) => { setDeziHandler(event, 2) }} />\r\n                <FormControl style={style4} value={elem4.dezi} type=\"text\" onChange={(event) => { setDeziHandler(event, 3) }} />\r\n            </InputGroup>\r\n            <InputGroup className=\"mb-3\">\r\n                <InputGroup.Text>Binary</InputGroup.Text>\r\n                <FormControl style={style1} value={elem1.octet} type=\"text\" onChange={(event) => setOctetHandler(event, 0)} onBlur={(event) => { addLeadingZeroesHandler(event.target.value, 0) }} />\r\n                <FormControl style={style2} value={elem2.octet} type=\"text\" onChange={(event) => setOctetHandler(event, 1)} onBlur={(event) => { addLeadingZeroesHandler(event.target.value, 1) }} />\r\n                <FormControl style={style3} value={elem3.octet} type=\"text\" onChange={(event) => setOctetHandler(event, 2)} onBlur={(event) => { addLeadingZeroesHandler(event.target.value, 2) }} />\r\n                <FormControl style={style4} value={elem4.octet} type=\"text\" onChange={(event) => setOctetHandler(event, 3)} onBlur={(event) => { addLeadingZeroesHandler(event.target.value, 3) }} />\r\n            </InputGroup>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default IPV4Component;","import React from \"react\";\r\nimport { InputGroup, FormControl } from \"react-bootstrap\";\r\nimport { booleanANDBinary, binaryToDezimal, maxBinary, dezimalToBinary, addLeadingZeroes } from \"./utils\";\r\n\r\nconst IPV4SolverComponent = (props) => {\r\n\r\n\r\n    const { mehStuff: [elemA, elemB] } = props;\r\n\r\n    const octets = elemA.map((item, i) => booleanANDBinary(item.octet, elemB[i].octet))\r\n    const [octet1, octet2, octet3, octet4] = octets\r\n    const [subOctet1, subOctet2, subOctet3, subOctet4] = elemB.map(item => item.octet)\r\n\r\n    const bcDezis = elemB.map((item, i) => maxBinary(item.octet, elemA[i].octet))\r\n\r\n    const subOctets = [subOctet1, subOctet2, subOctet3, subOctet4]\r\n\r\n    subOctets.forEach((item,i) => {\r\n        let bits = [...item].reduce((a,v) => v === \"0\" ? a + 1 : a ,0)\r\n        if ([...item].some(x => x === \"0\")) {\r\n            bcDezis[i] = binaryToDezimal(octets[i]) + Math.pow(2, bits) - 1\r\n        }\r\n    })\r\n\r\n    const [bcDezi1, bcDezi2, bcDezi3, bcDezi4] = bcDezis\r\n\r\n    return (\r\n        <>\r\n            <h3>{props.title}</h3>\r\n            <InputGroup className=\"mb-3\">\r\n                <InputGroup.Text>Dezimal</InputGroup.Text>\r\n                <FormControl type=\"number\" min=\"0\" max=\"255\" value={binaryToDezimal(octet1)} disabled />\r\n                <FormControl type=\"number\" min=\"0\" max=\"255\" value={binaryToDezimal(octet2)} disabled />\r\n                <FormControl type=\"number\" min=\"0\" max=\"255\" value={binaryToDezimal(octet3)} disabled />\r\n                <FormControl type=\"number\" min=\"0\" max=\"255\" value={binaryToDezimal(octet4)} disabled />\r\n            </InputGroup>\r\n            <InputGroup className=\"mb-3\">\r\n                <InputGroup.Text>Binary</InputGroup.Text>\r\n                <FormControl type=\"text\" value={octet1} disabled />\r\n                <FormControl type=\"text\" value={octet2} disabled />\r\n                <FormControl type=\"text\" value={octet3} disabled />\r\n                <FormControl type=\"text\" value={octet4} disabled />\r\n            </InputGroup>\r\n            <h3>Broadcast Address</h3>\r\n            <InputGroup className=\"mb-3\">\r\n                <InputGroup.Text>Dezimal</InputGroup.Text>\r\n                <FormControl type=\"number\" min=\"0\" max=\"255\" value={bcDezi1} disabled />\r\n                <FormControl type=\"number\" min=\"0\" max=\"255\" value={bcDezi2} disabled />\r\n                <FormControl type=\"number\" min=\"0\" max=\"255\" value={bcDezi3} disabled />\r\n                <FormControl type=\"number\" min=\"0\" max=\"255\" value={bcDezi4} disabled />\r\n            </InputGroup>\r\n            <InputGroup className=\"mb-3\">\r\n                <InputGroup.Text>Binary</InputGroup.Text>\r\n                <FormControl type=\"text\" value={addLeadingZeroes(dezimalToBinary(bcDezi1))} disabled />\r\n                <FormControl type=\"text\" value={addLeadingZeroes(dezimalToBinary(bcDezi2))} disabled />\r\n                <FormControl type=\"text\" value={addLeadingZeroes(dezimalToBinary(bcDezi3))} disabled />\r\n                <FormControl type=\"text\" value={addLeadingZeroes(dezimalToBinary(bcDezi4))} disabled />\r\n            </InputGroup>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default IPV4SolverComponent;","import { useState } from \"react\";\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Container, Accordion } from \"react-bootstrap\";\r\nimport NumberConverter from \"./NumberConverter\";\r\nimport IPV4Component from \"./IPV4Component\";\r\nimport IPV4SolverComponent from \"./IPV4SolverComponent\";\r\n\r\nconst App = () => {\r\n\r\n    const [octet1, setOctet1] = useState(\"00000000\");\r\n    const [octet2, setOctet2] = useState(\"00000000\");\r\n    const [octet3, setOctet3] = useState(\"00000000\");\r\n    const [octet4, setOctet4] = useState(\"00000000\");\r\n\r\n    const [dezi1, setDezi1] = useState(0);\r\n    const [dezi2, setDezi2] = useState(0);\r\n    const [dezi3, setDezi3] = useState(0);\r\n    const [dezi4, setDezi4] = useState(0);\r\n\r\n    const [subOctet1, setSubOctet1] = useState(\"11111111\");\r\n    const [subOctet2, setSubOctet2] = useState(\"11111111\");\r\n    const [subOctet3, setSubOctet3] = useState(\"11111111\");\r\n    const [subOctet4, setSubOctet4] = useState(\"00000000\");\r\n\r\n    const [subDezi1, setSubDezi1] = useState(255);\r\n    const [subDezi2, setSubDezi2] = useState(255);\r\n    const [subDezi3, setSubDezi3] = useState(255);\r\n    const [subDezi4, setSubDezi4] = useState(0);\r\n\r\n\r\n    const mehStuff = [\r\n        [\r\n            {\r\n                setOctet: setOctet1,\r\n                setDezi: setDezi1,\r\n                octet: octet1,\r\n                dezi: dezi1\r\n            },\r\n            {\r\n                setOctet: setOctet2,\r\n                setDezi: setDezi2,\r\n                octet: octet2,\r\n                dezi: dezi2\r\n            },\r\n            {\r\n                setOctet: setOctet3,\r\n                setDezi: setDezi3,\r\n                octet: octet3,\r\n                dezi: dezi3\r\n            },\r\n            {\r\n                setOctet: setOctet4,\r\n                setDezi: setDezi4,\r\n                octet: octet4,\r\n                dezi: dezi4\r\n            }\r\n        ],\r\n        [\r\n            {\r\n                setOctet: setSubOctet1,\r\n                setDezi: setSubDezi1,\r\n                octet: subOctet1,\r\n                dezi: subDezi1\r\n            },\r\n            {\r\n                setOctet: setSubOctet2,\r\n                setDezi: setSubDezi2,\r\n                octet: subOctet2,\r\n                dezi: subDezi2\r\n            },\r\n            {\r\n                setOctet: setSubOctet3,\r\n                setDezi: setSubDezi3,\r\n                octet: subOctet3,\r\n                dezi: subDezi3\r\n            },\r\n            {\r\n                setOctet: setSubOctet4,\r\n                setDezi: setSubDezi4,\r\n                octet: subOctet4,\r\n                dezi: subDezi4\r\n            }\r\n        ]\r\n    ];\r\n\r\n    const addrCount = Math.pow(2, [...subOctet1, ...subOctet2, ...subOctet3, ...subOctet4].filter(item => item === \"0\").length) - 2\r\n    //booleanANDBinary(\"1101\", \"1\")\r\n    const subnetBits = [subOctet1, subOctet2, subOctet3, subOctet4].map(item =>\r\n        [...item].some(x => x === \"0\")\r\n            ? [...item].reduce((a, v) => v === \"1\" ? a + 1 : a, 0)\r\n            : 0\r\n    ).reduce((sum, x) => sum + x)\r\n\r\n    const subnetCount = Math.pow(2, subnetBits)\r\n\r\n    return (\r\n\r\n\r\n        <Container>\r\n            <Accordion defaultActiveKey=\"0\">\r\n                <Accordion.Item eventKey=\"0\">\r\n                    <Accordion.Header>Calculation Visualization</Accordion.Header>\r\n                    <Accordion.Body>\r\n                       <NumberConverter />\r\n                    </Accordion.Body>\r\n                </Accordion.Item>\r\n                <Accordion.Item eventKey=\"1\">\r\n                    <Accordion.Header>IPV4Stuff</Accordion.Header>\r\n                    <Accordion.Body>\r\n                        <IPV4Component title={\"IP-Address\"} mehStuff={mehStuff[0]} />\r\n                        <IPV4Component title={\"Subnet Mask\"} mehStuff={mehStuff[1]} restricted />\r\n                        <h3>There are {subnetCount} subnets with {addrCount} hosts each available.</h3>\r\n                        <IPV4SolverComponent title={\"Network Address\"} mehStuff={mehStuff} />\r\n                    </Accordion.Body>\r\n                </Accordion.Item>\r\n            </Accordion>\r\n\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}