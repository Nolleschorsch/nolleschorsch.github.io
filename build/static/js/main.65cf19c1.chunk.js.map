{"version":3,"sources":["utils.js","IPV4Component.js","IPV4SolverComponent.js","App.js","reportWebVitals.js","index.js"],"names":["binaryToDezimal","binary","dezi","reverse","forEach","digit","i","Math","pow","maxBinary","value","valueB","console","log","exponent","filter","a","length","IPV4Component","props","setDeziHandler","event","index","target","setDezi","mehStuff","number","parseInt","every","item","includes","isValidNumber","digits","n","r","floor","push","join","dezimalToBinary","addLeadingZeroesHandler","setOctetHandler","setOctet","binarySize","size","unshift","addLeadingZeroes","elem1","elem2","elem3","elem4","title","InputGroup","className","Text","FormControl","type","onChange","octet","onBlur","IPV4SolverComponent","elemA","elemB","map","dezi1","dezi2","dezi3","dezi4","b","foo","sort","j","booleanANDBinary","octet1","octet2","octet3","octet4","subOctet1","subOctet2","subOctet3","subOctet4","min","max","disabled","App","useState","setOctet1","setOctet2","setOctet3","setOctet4","setDezi1","setDezi2","setDezi3","setDezi4","setSubOctet1","setSubOctet2","setSubOctet3","setSubOctet4","subDezi1","setSubDezi1","subDezi2","setSubDezi2","subDezi3","setSubDezi3","subDezi4","Container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.65cf19c1.chunk.js","sourcesContent":["export const dezimalToBinary = (number) => {\r\n\r\n    let digits = [];\r\n    let n = number;\r\n\r\n    while (true) {\r\n        let r = n % 2;\r\n        n = Math.floor(n / 2);\r\n        digits.push(r);\r\n        if (n === 0) break;\r\n    }\r\n\r\n    digits.reverse();\r\n\r\n    return digits.join('');\r\n}\r\n\r\n\r\nexport const binaryToDezimal = (binary) => {\r\n    let dezi = 0;\r\n    \r\n    [...binary].reverse().forEach((digit, i) => {\r\n        if (digit === \"1\") dezi += Math.pow(2, i);\r\n    })\r\n\r\n    return dezi;\r\n}\r\n\r\nexport const addLeadingZeroes = (value, binarySize) => {\r\n    let size = binarySize ? binarySize : 8;\r\n    let digits = [...value];\r\n    while (digits.length < size) {\r\n        digits.unshift(\"0\")\r\n    }\r\n    let binary = digits.join('');\r\n    return binary;\r\n}\r\n\r\nexport const booleanANDBinary = (a,b) => {\r\n\r\n    let foo = [a,b].sort((i,j) => i.length > j.length ? 1 : -1);\r\n\r\n    while (foo[0].length < foo[1].length) {\r\n        foo[0] = \"0\" + foo[0];\r\n    }\r\n\r\n    let binary = \"\";\r\n\r\n    [...foo[0]].forEach((digit, i) => {\r\n        digit === \"1\" && foo[1][i] === \"1\" ? binary += \"1\" : binary += \"0\"\r\n    })\r\n\r\n    return binary\r\n}\r\n\r\nexport const isValidNumber = (value) => {\r\n    return [...value].every(item => [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"].includes(item))\r\n}\r\n\r\nexport const maxBinary = (value, valueB) => {\r\n\r\n    console.log({value})\r\n    let exponent = [...value].filter(a => a === \"0\").length\r\n\r\n    return exponent === 0 ? valueB : Math.pow(2, exponent) - 1\r\n}","import React from \"react\";\r\nimport { InputGroup, FormControl } from \"react-bootstrap\";\r\nimport { binaryToDezimal, dezimalToBinary, addLeadingZeroes, isValidNumber } from \"./utils\";\r\n\r\n\r\n\r\nconst IPV4Component = (props) => {\r\n\r\n\r\n    const setDeziHandler = (event, index) => {\r\n\r\n        const value = event.target.value === \"\" ? \"0\" : event.target.value\r\n\r\n        let { setDezi } = props.mehStuff[index];\r\n\r\n        const number = parseInt(value);\r\n\r\n        if (number >= 0 && number <= 255 && isValidNumber(value)) {\r\n            setDezi(number)\r\n            let binary = dezimalToBinary(number);\r\n            addLeadingZeroesHandler(binary, index);\r\n        }\r\n    }\r\n\r\n    const setOctetHandler = (event, index) => {\r\n        let { value } = event.target;\r\n\r\n        let { setDezi, setOctet } = props.mehStuff[index];\r\n\r\n        if ([...value].every(n => [\"0\", \"1\"].includes(n))) {\r\n            setOctet(value);\r\n\r\n            let number = binaryToDezimal(value);\r\n            setDezi(number);\r\n        }\r\n\r\n    }\r\n\r\n    const addLeadingZeroesHandler = (value, index) => {\r\n        let { setOctet } = props.mehStuff[index];\r\n        let binary = addLeadingZeroes(value);\r\n        setOctet(binary);\r\n    }\r\n\r\n\r\n    const [elem1, elem2, elem3, elem4] = props.mehStuff;\r\n    \r\n\r\n    return (\r\n        <>\r\n            <h3>{props.title}</h3>\r\n            <InputGroup className=\"mb-3\">\r\n                <InputGroup.Text>Dezimal</InputGroup.Text>\r\n                <FormControl value={elem1.dezi} type=\"text\" onChange={(event) => { setDeziHandler(event, 0) }} />\r\n                <FormControl value={elem2.dezi} type=\"text\" onChange={(event) => { setDeziHandler(event, 1) }} />\r\n                <FormControl value={elem3.dezi} type=\"text\" onChange={(event) => { setDeziHandler(event, 2) }} />\r\n                <FormControl value={elem4.dezi} type=\"text\" onChange={(event) => { setDeziHandler(event, 3) }} />\r\n            </InputGroup>\r\n            <InputGroup className=\"mb-3\">\r\n                <InputGroup.Text>Binary</InputGroup.Text>\r\n                <FormControl value={elem1.octet} type=\"text\" onChange={(event) => setOctetHandler(event, 0)} onBlur={(event) => {addLeadingZeroesHandler(event.target.value, 0)}} />\r\n                <FormControl value={elem2.octet} type=\"text\" onChange={(event) => setOctetHandler(event, 1)} onBlur={(event) => {addLeadingZeroesHandler(event.target.value, 1)}} />\r\n                <FormControl value={elem3.octet} type=\"text\" onChange={(event) => setOctetHandler(event, 2)} onBlur={(event) => {addLeadingZeroesHandler(event.target.value, 2)}} />\r\n                <FormControl value={elem4.octet} type=\"text\" onChange={(event) => setOctetHandler(event, 3)} onBlur={(event) => {addLeadingZeroesHandler(event.target.value, 3)}} />\r\n            </InputGroup>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default IPV4Component;","import React from \"react\";\r\nimport { InputGroup, FormControl } from \"react-bootstrap\";\r\nimport { booleanANDBinary, binaryToDezimal, maxBinary } from \"./utils\";\r\n\r\nconst IPV4SolverComponent = (props) => {\r\n\r\n\r\n    const { mehStuff: [elemA, elemB] } = props;\r\n\r\n    const [dezi1, dezi2, dezi3, dezi4] = elemA.map(item => item.dezi)\r\n    const [octet1, octet2, octet3, octet4] = elemA.map((item, i) => booleanANDBinary(item.octet, elemB[i].octet))\r\n    const [subOctet1, subOctet2, subOctet3, subOctet4] = elemB.map(item => item.octet)\r\n\r\n    return (\r\n        <>\r\n            <h3>{props.title}</h3>\r\n            <InputGroup className=\"mb-3\">\r\n                <InputGroup.Text>Dezimal</InputGroup.Text>\r\n                <FormControl type=\"number\" min=\"0\" max=\"255\" value={binaryToDezimal(octet1)} disabled />\r\n                <FormControl type=\"number\" min=\"0\" max=\"255\" value={binaryToDezimal(octet2)} disabled />\r\n                <FormControl type=\"number\" min=\"0\" max=\"255\" value={binaryToDezimal(octet3)} disabled />\r\n                <FormControl type=\"number\" min=\"0\" max=\"255\" value={binaryToDezimal(octet4)} disabled />\r\n            </InputGroup>\r\n            <InputGroup className=\"mb-3\">\r\n                <InputGroup.Text>Binary</InputGroup.Text>\r\n                <FormControl type=\"text\" value={octet1} disabled />\r\n                <FormControl type=\"text\" value={octet2} disabled />\r\n                <FormControl type=\"text\" value={octet3} disabled />\r\n                <FormControl type=\"text\" value={octet4} disabled />\r\n            </InputGroup>\r\n            <h3>Broadcast Address</h3>\r\n            <InputGroup className=\"mb-3\">\r\n                <InputGroup.Text>Dezimal</InputGroup.Text>\r\n                <FormControl type=\"number\" min=\"0\" max=\"255\" value={maxBinary(subOctet1, dezi1)} disabled />\r\n                <FormControl type=\"number\" min=\"0\" max=\"255\" value={maxBinary(subOctet2, dezi2)} disabled />\r\n                <FormControl type=\"number\" min=\"0\" max=\"255\" value={maxBinary(subOctet3, dezi3)} disabled />\r\n                <FormControl type=\"number\" min=\"0\" max=\"255\" value={maxBinary(subOctet4, dezi4)} disabled />\r\n            </InputGroup>\r\n            <InputGroup className=\"mb-3\">\r\n                <InputGroup.Text>Binary</InputGroup.Text>\r\n                <FormControl type=\"text\" value={octet1} disabled />\r\n                <FormControl type=\"text\" value={octet2} disabled />\r\n                <FormControl type=\"text\" value={octet3} disabled />\r\n                <FormControl type=\"text\" value={octet4} disabled />\r\n            </InputGroup>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default IPV4SolverComponent;","import { useState } from \"react\";\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container } from \"react-bootstrap\";\nimport IPV4Component from \"./IPV4Component\";\nimport IPV4SolverComponent from \"./IPV4SolverComponent\";\n\nconst App = () => {\n\n    const [octet1, setOctet1] = useState(\"00000000\");\n    const [octet2, setOctet2] = useState(\"00000000\");\n    const [octet3, setOctet3] = useState(\"00000000\");\n    const [octet4, setOctet4] = useState(\"00000000\");\n\n    const [dezi1, setDezi1] = useState(0);\n    const [dezi2, setDezi2] = useState(0);\n    const [dezi3, setDezi3] = useState(0);\n    const [dezi4, setDezi4] = useState(0);\n\n    const [subOctet1, setSubOctet1] = useState(\"11111111\");\n    const [subOctet2, setSubOctet2] = useState(\"11111111\");\n    const [subOctet3, setSubOctet3] = useState(\"11111111\");\n    const [subOctet4, setSubOctet4] = useState(\"00000000\");\n\n    const [subDezi1, setSubDezi1] = useState(255);\n    const [subDezi2, setSubDezi2] = useState(255);\n    const [subDezi3, setSubDezi3] = useState(255);\n    const [subDezi4, setSubDezi4] = useState(0);\n\n\n    const mehStuff = [\n        [\n            {\n                setOctet: setOctet1,\n                setDezi: setDezi1,\n                octet: octet1,\n                dezi: dezi1\n            },\n            {\n                setOctet: setOctet2,\n                setDezi: setDezi2,\n                octet: octet2,\n                dezi: dezi2\n            },\n            {\n                setOctet: setOctet3,\n                setDezi: setDezi3,\n                octet: octet3,\n                dezi: dezi3\n            },\n            {\n                setOctet: setOctet4,\n                setDezi: setDezi4,\n                octet: octet4,\n                dezi: dezi4\n            }\n        ],\n        [\n            {\n                setOctet: setSubOctet1,\n                setDezi: setSubDezi1,\n                octet: subOctet1,\n                dezi: subDezi1\n            },\n            {\n                setOctet: setSubOctet2,\n                setDezi: setSubDezi2,\n                octet: subOctet2,\n                dezi: subDezi2\n            },\n            {\n                setOctet: setSubOctet3,\n                setDezi: setSubDezi3,\n                octet: subOctet3,\n                dezi: subDezi3\n            },\n            {\n                setOctet: setSubOctet4,\n                setDezi: setSubDezi4,\n                octet: subOctet4,\n                dezi: subDezi4\n            }\n        ]\n    ];\n\n    //booleanANDBinary(\"1101\", \"1\")\n\n    return (\n        <Container>\n            <IPV4Component title={\"IP-Address\"} mehStuff={mehStuff[0]} />\n            <IPV4Component title={\"Subnet Mask\"} mehStuff={mehStuff[1]} />\n            <IPV4SolverComponent title={\"Network Address\"} mehStuff={mehStuff} />\n        </Container>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}